name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
    
    - name: Run gofmt
      run: |
        if [ "$(gofmt -s -l . | wc -l)" -gt 0 ]; then
          echo "The following files are not formatted:"
          gofmt -s -l .
          exit 1
        fi
    
    - name: Run go vet
      run: go vet ./...
    
    - name: Run go test
      run: go test -v ./...
    
    - name: Run golangci-lint
      uses: golangci/golangci-lint-action@v3
      with:
        version: latest
        args: --timeout=5m

  build:
    runs-on: ${{ matrix.os }}
    needs: test
    
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]
        exclude:
          - os: ubuntu-latest
            goos: windows
            goarch: amd64
          - os: ubuntu-latest
            goos: windows
            goarch: arm64
          - os: ubuntu-latest
            goos: darwin
            goarch: amd64
          - os: ubuntu-latest
            goos: darwin
            goarch: arm64
          - os: windows-latest
            goos: linux
            goarch: amd64
          - os: windows-latest
            goos: linux
            goarch: arm64
          - os: windows-latest
            goos: darwin
            goarch: amd64
          - os: windows-latest
            goos: darwin
            goarch: arm64
          - os: macos-latest
            goos: linux
            goarch: amd64
          - os: macos-latest
            goos: linux
            goarch: arm64
          - os: macos-latest
            goos: windows
            goarch: amd64
          - os: macos-latest
            goos: windows
            goarch: arm64
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
    
    - name: Build
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
        CGO_ENABLED: 0
      run: |
        if [ "${{ matrix.goos }}" = "windows" ]; then
          go build -o huhgit-${{ matrix.goos }}-${{ matrix.goarch }}.exe .
        else
          go build -o huhgit-${{ matrix.goos }}-${{ matrix.goarch }} .
        fi
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: huhgit-${{ matrix.goos }}-${{ matrix.goarch }}
        path: huhgit-${{ matrix.goos }}-${{ matrix.goarch }}*
